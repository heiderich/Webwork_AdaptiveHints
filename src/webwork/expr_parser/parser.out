Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> statement
Rule 1     statement -> expression
Rule 2     statement -> factor
Rule 3     statement -> list
Rule 4     expression -> expression PLUS factor
Rule 5     expression -> factor PLUS factor
Rule 6     expression -> expression MINUS factor
Rule 7     expression -> factor MINUS factor
Rule 8     factor -> factor TIMES factor
Rule 9     factor -> factor DIVIDE factor
Rule 10    factor -> factor EXP factor
Rule 11    factor -> factor factor
Rule 12    factor -> MINUS factor
Rule 13    factor -> factor FACTORIAL
Rule 14    factor -> CHOOSE LPAREN list RPAREN
Rule 15    factor -> LPAREN expression RPAREN
Rule 16    factor -> LBRACKET expression RBRACKET
Rule 17    factor -> LPAREN factor RPAREN
Rule 18    factor -> LBRACKET factor RBRACKET
Rule 19    factor -> LSET list RSET
Rule 20    factor -> LSET expression RSET
Rule 21    factor -> LSET RSET
Rule 22    factor -> LPAREN list RPAREN
Rule 23    list -> expression COMMA
Rule 24    list -> list expression COMMA
Rule 25    list -> list expression
Rule 26    list -> factor COMMA
Rule 27    list -> list factor COMMA
Rule 28    list -> list factor
Rule 29    factor -> NUMBER
Rule 30    factor -> VARIABLE

Terminals, with rules where they appear

CHOOSE               : 14
COMMA                : 23 24 26 27
DIVIDE               : 9
EXP                  : 10
FACTORIAL            : 13
LBRACKET             : 16 18
LPAREN               : 14 15 17 22
LSET                 : 19 20 21
MINUS                : 6 7 12
NUMBER               : 29
PLUS                 : 4 5
RBRACKET             : 16 18
RPAREN               : 14 15 17 22
RSET                 : 19 20 21
TIMES                : 8
VARIABLE             : 30
error                : 

Nonterminals, with rules where they appear

expression           : 1 4 6 15 16 20 23 24 25
factor               : 2 4 5 5 6 7 7 8 8 9 9 10 10 11 11 12 13 17 18 26 27 28
list                 : 3 14 19 22 24 25 27 28
statement            : 0

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . expression
    (2) statement -> . factor
    (3) statement -> . list
    (4) expression -> . expression PLUS factor
    (5) expression -> . factor PLUS factor
    (6) expression -> . expression MINUS factor
    (7) expression -> . factor MINUS factor
    (8) factor -> . factor TIMES factor
    (9) factor -> . factor DIVIDE factor
    (10) factor -> . factor EXP factor
    (11) factor -> . factor factor
    (12) factor -> . MINUS factor
    (13) factor -> . factor FACTORIAL
    (14) factor -> . CHOOSE LPAREN list RPAREN
    (15) factor -> . LPAREN expression RPAREN
    (16) factor -> . LBRACKET expression RBRACKET
    (17) factor -> . LPAREN factor RPAREN
    (18) factor -> . LBRACKET factor RBRACKET
    (19) factor -> . LSET list RSET
    (20) factor -> . LSET expression RSET
    (21) factor -> . LSET RSET
    (22) factor -> . LPAREN list RPAREN
    (29) factor -> . NUMBER
    (30) factor -> . VARIABLE
    (23) list -> . expression COMMA
    (24) list -> . list expression COMMA
    (25) list -> . list expression
    (26) list -> . factor COMMA
    (27) list -> . list factor COMMA
    (28) list -> . list factor

    MINUS           shift and go to state 11
    CHOOSE          shift and go to state 6
    LPAREN          shift and go to state 9
    LBRACKET        shift and go to state 3
    LSET            shift and go to state 5
    NUMBER          shift and go to state 2
    VARIABLE        shift and go to state 4

    list                           shift and go to state 1
    expression                     shift and go to state 10
    statement                      shift and go to state 7
    factor                         shift and go to state 8

state 1

    (3) statement -> list .
    (24) list -> list . expression COMMA
    (25) list -> list . expression
    (27) list -> list . factor COMMA
    (28) list -> list . factor
    (4) expression -> . expression PLUS factor
    (5) expression -> . factor PLUS factor
    (6) expression -> . expression MINUS factor
    (7) expression -> . factor MINUS factor
    (8) factor -> . factor TIMES factor
    (9) factor -> . factor DIVIDE factor
    (10) factor -> . factor EXP factor
    (11) factor -> . factor factor
    (12) factor -> . MINUS factor
    (13) factor -> . factor FACTORIAL
    (14) factor -> . CHOOSE LPAREN list RPAREN
    (15) factor -> . LPAREN expression RPAREN
    (16) factor -> . LBRACKET expression RBRACKET
    (17) factor -> . LPAREN factor RPAREN
    (18) factor -> . LBRACKET factor RBRACKET
    (19) factor -> . LSET list RSET
    (20) factor -> . LSET expression RSET
    (21) factor -> . LSET RSET
    (22) factor -> . LPAREN list RPAREN
    (29) factor -> . NUMBER
    (30) factor -> . VARIABLE

    $end            reduce using rule 3 (statement -> list .)
    MINUS           shift and go to state 11
    CHOOSE          shift and go to state 6
    LPAREN          shift and go to state 9
    LBRACKET        shift and go to state 3
    LSET            shift and go to state 5
    NUMBER          shift and go to state 2
    VARIABLE        shift and go to state 4

    expression                     shift and go to state 13
    factor                         shift and go to state 12

state 2

    (29) factor -> NUMBER .

    TIMES           reduce using rule 29 (factor -> NUMBER .)
    DIVIDE          reduce using rule 29 (factor -> NUMBER .)
    EXP             reduce using rule 29 (factor -> NUMBER .)
    FACTORIAL       reduce using rule 29 (factor -> NUMBER .)
    MINUS           reduce using rule 29 (factor -> NUMBER .)
    CHOOSE          reduce using rule 29 (factor -> NUMBER .)
    LPAREN          reduce using rule 29 (factor -> NUMBER .)
    LBRACKET        reduce using rule 29 (factor -> NUMBER .)
    LSET            reduce using rule 29 (factor -> NUMBER .)
    NUMBER          reduce using rule 29 (factor -> NUMBER .)
    VARIABLE        reduce using rule 29 (factor -> NUMBER .)
    COMMA           reduce using rule 29 (factor -> NUMBER .)
    PLUS            reduce using rule 29 (factor -> NUMBER .)
    $end            reduce using rule 29 (factor -> NUMBER .)
    RBRACKET        reduce using rule 29 (factor -> NUMBER .)
    RPAREN          reduce using rule 29 (factor -> NUMBER .)
    RSET            reduce using rule 29 (factor -> NUMBER .)


state 3

    (16) factor -> LBRACKET . expression RBRACKET
    (18) factor -> LBRACKET . factor RBRACKET
    (4) expression -> . expression PLUS factor
    (5) expression -> . factor PLUS factor
    (6) expression -> . expression MINUS factor
    (7) expression -> . factor MINUS factor
    (8) factor -> . factor TIMES factor
    (9) factor -> . factor DIVIDE factor
    (10) factor -> . factor EXP factor
    (11) factor -> . factor factor
    (12) factor -> . MINUS factor
    (13) factor -> . factor FACTORIAL
    (14) factor -> . CHOOSE LPAREN list RPAREN
    (15) factor -> . LPAREN expression RPAREN
    (16) factor -> . LBRACKET expression RBRACKET
    (17) factor -> . LPAREN factor RPAREN
    (18) factor -> . LBRACKET factor RBRACKET
    (19) factor -> . LSET list RSET
    (20) factor -> . LSET expression RSET
    (21) factor -> . LSET RSET
    (22) factor -> . LPAREN list RPAREN
    (29) factor -> . NUMBER
    (30) factor -> . VARIABLE

    MINUS           shift and go to state 11
    CHOOSE          shift and go to state 6
    LPAREN          shift and go to state 9
    LBRACKET        shift and go to state 3
    LSET            shift and go to state 5
    NUMBER          shift and go to state 2
    VARIABLE        shift and go to state 4

    expression                     shift and go to state 15
    factor                         shift and go to state 14

state 4

    (30) factor -> VARIABLE .

    TIMES           reduce using rule 30 (factor -> VARIABLE .)
    DIVIDE          reduce using rule 30 (factor -> VARIABLE .)
    EXP             reduce using rule 30 (factor -> VARIABLE .)
    FACTORIAL       reduce using rule 30 (factor -> VARIABLE .)
    MINUS           reduce using rule 30 (factor -> VARIABLE .)
    CHOOSE          reduce using rule 30 (factor -> VARIABLE .)
    LPAREN          reduce using rule 30 (factor -> VARIABLE .)
    LBRACKET        reduce using rule 30 (factor -> VARIABLE .)
    LSET            reduce using rule 30 (factor -> VARIABLE .)
    NUMBER          reduce using rule 30 (factor -> VARIABLE .)
    VARIABLE        reduce using rule 30 (factor -> VARIABLE .)
    COMMA           reduce using rule 30 (factor -> VARIABLE .)
    PLUS            reduce using rule 30 (factor -> VARIABLE .)
    $end            reduce using rule 30 (factor -> VARIABLE .)
    RBRACKET        reduce using rule 30 (factor -> VARIABLE .)
    RPAREN          reduce using rule 30 (factor -> VARIABLE .)
    RSET            reduce using rule 30 (factor -> VARIABLE .)


state 5

    (19) factor -> LSET . list RSET
    (20) factor -> LSET . expression RSET
    (21) factor -> LSET . RSET
    (23) list -> . expression COMMA
    (24) list -> . list expression COMMA
    (25) list -> . list expression
    (26) list -> . factor COMMA
    (27) list -> . list factor COMMA
    (28) list -> . list factor
    (4) expression -> . expression PLUS factor
    (5) expression -> . factor PLUS factor
    (6) expression -> . expression MINUS factor
    (7) expression -> . factor MINUS factor
    (8) factor -> . factor TIMES factor
    (9) factor -> . factor DIVIDE factor
    (10) factor -> . factor EXP factor
    (11) factor -> . factor factor
    (12) factor -> . MINUS factor
    (13) factor -> . factor FACTORIAL
    (14) factor -> . CHOOSE LPAREN list RPAREN
    (15) factor -> . LPAREN expression RPAREN
    (16) factor -> . LBRACKET expression RBRACKET
    (17) factor -> . LPAREN factor RPAREN
    (18) factor -> . LBRACKET factor RBRACKET
    (19) factor -> . LSET list RSET
    (20) factor -> . LSET expression RSET
    (21) factor -> . LSET RSET
    (22) factor -> . LPAREN list RPAREN
    (29) factor -> . NUMBER
    (30) factor -> . VARIABLE

    RSET            shift and go to state 17
    MINUS           shift and go to state 11
    CHOOSE          shift and go to state 6
    LPAREN          shift and go to state 9
    LBRACKET        shift and go to state 3
    LSET            shift and go to state 5
    NUMBER          shift and go to state 2
    VARIABLE        shift and go to state 4

    expression                     shift and go to state 19
    list                           shift and go to state 16
    factor                         shift and go to state 18

state 6

    (14) factor -> CHOOSE . LPAREN list RPAREN

    LPAREN          shift and go to state 20


state 7

    (0) S' -> statement .



state 8

    (2) statement -> factor .
    (5) expression -> factor . PLUS factor
    (7) expression -> factor . MINUS factor
    (8) factor -> factor . TIMES factor
    (9) factor -> factor . DIVIDE factor
    (10) factor -> factor . EXP factor
    (11) factor -> factor . factor
    (13) factor -> factor . FACTORIAL
    (26) list -> factor . COMMA
    (8) factor -> . factor TIMES factor
    (9) factor -> . factor DIVIDE factor
    (10) factor -> . factor EXP factor
    (11) factor -> . factor factor
    (12) factor -> . MINUS factor
    (13) factor -> . factor FACTORIAL
    (14) factor -> . CHOOSE LPAREN list RPAREN
    (15) factor -> . LPAREN expression RPAREN
    (16) factor -> . LBRACKET expression RBRACKET
    (17) factor -> . LPAREN factor RPAREN
    (18) factor -> . LBRACKET factor RBRACKET
    (19) factor -> . LSET list RSET
    (20) factor -> . LSET expression RSET
    (21) factor -> . LSET RSET
    (22) factor -> . LPAREN list RPAREN
    (29) factor -> . NUMBER
    (30) factor -> . VARIABLE

    $end            reduce using rule 2 (statement -> factor .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 28
    TIMES           shift and go to state 23
    DIVIDE          shift and go to state 21
    EXP             shift and go to state 25
    FACTORIAL       shift and go to state 22
    COMMA           shift and go to state 27
    CHOOSE          shift and go to state 6
    LPAREN          shift and go to state 9
    LBRACKET        shift and go to state 3
    LSET            shift and go to state 5
    NUMBER          shift and go to state 2
    VARIABLE        shift and go to state 4

    factor                         shift and go to state 26

state 9

    (15) factor -> LPAREN . expression RPAREN
    (17) factor -> LPAREN . factor RPAREN
    (22) factor -> LPAREN . list RPAREN
    (4) expression -> . expression PLUS factor
    (5) expression -> . factor PLUS factor
    (6) expression -> . expression MINUS factor
    (7) expression -> . factor MINUS factor
    (8) factor -> . factor TIMES factor
    (9) factor -> . factor DIVIDE factor
    (10) factor -> . factor EXP factor
    (11) factor -> . factor factor
    (12) factor -> . MINUS factor
    (13) factor -> . factor FACTORIAL
    (14) factor -> . CHOOSE LPAREN list RPAREN
    (15) factor -> . LPAREN expression RPAREN
    (16) factor -> . LBRACKET expression RBRACKET
    (17) factor -> . LPAREN factor RPAREN
    (18) factor -> . LBRACKET factor RBRACKET
    (19) factor -> . LSET list RSET
    (20) factor -> . LSET expression RSET
    (21) factor -> . LSET RSET
    (22) factor -> . LPAREN list RPAREN
    (29) factor -> . NUMBER
    (30) factor -> . VARIABLE
    (23) list -> . expression COMMA
    (24) list -> . list expression COMMA
    (25) list -> . list expression
    (26) list -> . factor COMMA
    (27) list -> . list factor COMMA
    (28) list -> . list factor

    MINUS           shift and go to state 11
    CHOOSE          shift and go to state 6
    LPAREN          shift and go to state 9
    LBRACKET        shift and go to state 3
    LSET            shift and go to state 5
    NUMBER          shift and go to state 2
    VARIABLE        shift and go to state 4

    list                           shift and go to state 29
    expression                     shift and go to state 31
    factor                         shift and go to state 30

state 10

    (1) statement -> expression .
    (4) expression -> expression . PLUS factor
    (6) expression -> expression . MINUS factor
    (23) list -> expression . COMMA

    $end            reduce using rule 1 (statement -> expression .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 34
    COMMA           shift and go to state 33


state 11

    (12) factor -> MINUS . factor
    (8) factor -> . factor TIMES factor
    (9) factor -> . factor DIVIDE factor
    (10) factor -> . factor EXP factor
    (11) factor -> . factor factor
    (12) factor -> . MINUS factor
    (13) factor -> . factor FACTORIAL
    (14) factor -> . CHOOSE LPAREN list RPAREN
    (15) factor -> . LPAREN expression RPAREN
    (16) factor -> . LBRACKET expression RBRACKET
    (17) factor -> . LPAREN factor RPAREN
    (18) factor -> . LBRACKET factor RBRACKET
    (19) factor -> . LSET list RSET
    (20) factor -> . LSET expression RSET
    (21) factor -> . LSET RSET
    (22) factor -> . LPAREN list RPAREN
    (29) factor -> . NUMBER
    (30) factor -> . VARIABLE

    MINUS           shift and go to state 11
    CHOOSE          shift and go to state 6
    LPAREN          shift and go to state 9
    LBRACKET        shift and go to state 3
    LSET            shift and go to state 5
    NUMBER          shift and go to state 2
    VARIABLE        shift and go to state 4

    factor                         shift and go to state 35

state 12

    (27) list -> list factor . COMMA
    (28) list -> list factor .
    (5) expression -> factor . PLUS factor
    (7) expression -> factor . MINUS factor
    (8) factor -> factor . TIMES factor
    (9) factor -> factor . DIVIDE factor
    (10) factor -> factor . EXP factor
    (11) factor -> factor . factor
    (13) factor -> factor . FACTORIAL
    (8) factor -> . factor TIMES factor
    (9) factor -> . factor DIVIDE factor
    (10) factor -> . factor EXP factor
    (11) factor -> . factor factor
    (12) factor -> . MINUS factor
    (13) factor -> . factor FACTORIAL
    (14) factor -> . CHOOSE LPAREN list RPAREN
    (15) factor -> . LPAREN expression RPAREN
    (16) factor -> . LBRACKET expression RBRACKET
    (17) factor -> . LPAREN factor RPAREN
    (18) factor -> . LBRACKET factor RBRACKET
    (19) factor -> . LSET list RSET
    (20) factor -> . LSET expression RSET
    (21) factor -> . LSET RSET
    (22) factor -> . LPAREN list RPAREN
    (29) factor -> . NUMBER
    (30) factor -> . VARIABLE

    COMMA           shift and go to state 36
    RPAREN          reduce using rule 28 (list -> list factor .)
    LPAREN          reduce using rule 28 (list -> list factor .)
    LBRACKET        reduce using rule 28 (list -> list factor .)
    LSET            reduce using rule 28 (list -> list factor .)
    NUMBER          reduce using rule 28 (list -> list factor .)
    VARIABLE        reduce using rule 28 (list -> list factor .)
    RSET            reduce using rule 28 (list -> list factor .)
    $end            reduce using rule 28 (list -> list factor .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 28
    TIMES           shift and go to state 23
    DIVIDE          shift and go to state 21
    EXP             shift and go to state 25
    FACTORIAL       shift and go to state 22
    CHOOSE          shift and go to state 6

  ! MINUS           [ reduce using rule 28 (list -> list factor .) ]
  ! CHOOSE          [ reduce using rule 28 (list -> list factor .) ]
  ! LPAREN          [ shift and go to state 9 ]
  ! LBRACKET        [ shift and go to state 3 ]
  ! LSET            [ shift and go to state 5 ]
  ! NUMBER          [ shift and go to state 2 ]
  ! VARIABLE        [ shift and go to state 4 ]

    factor                         shift and go to state 26

state 13

    (24) list -> list expression . COMMA
    (25) list -> list expression .
    (4) expression -> expression . PLUS factor
    (6) expression -> expression . MINUS factor

  ! shift/reduce conflict for MINUS resolved as shift
    COMMA           shift and go to state 37
    RPAREN          reduce using rule 25 (list -> list expression .)
    CHOOSE          reduce using rule 25 (list -> list expression .)
    LPAREN          reduce using rule 25 (list -> list expression .)
    LBRACKET        reduce using rule 25 (list -> list expression .)
    LSET            reduce using rule 25 (list -> list expression .)
    NUMBER          reduce using rule 25 (list -> list expression .)
    VARIABLE        reduce using rule 25 (list -> list expression .)
    RSET            reduce using rule 25 (list -> list expression .)
    $end            reduce using rule 25 (list -> list expression .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 34

  ! MINUS           [ reduce using rule 25 (list -> list expression .) ]


state 14

    (18) factor -> LBRACKET factor . RBRACKET
    (5) expression -> factor . PLUS factor
    (7) expression -> factor . MINUS factor
    (8) factor -> factor . TIMES factor
    (9) factor -> factor . DIVIDE factor
    (10) factor -> factor . EXP factor
    (11) factor -> factor . factor
    (13) factor -> factor . FACTORIAL
    (8) factor -> . factor TIMES factor
    (9) factor -> . factor DIVIDE factor
    (10) factor -> . factor EXP factor
    (11) factor -> . factor factor
    (12) factor -> . MINUS factor
    (13) factor -> . factor FACTORIAL
    (14) factor -> . CHOOSE LPAREN list RPAREN
    (15) factor -> . LPAREN expression RPAREN
    (16) factor -> . LBRACKET expression RBRACKET
    (17) factor -> . LPAREN factor RPAREN
    (18) factor -> . LBRACKET factor RBRACKET
    (19) factor -> . LSET list RSET
    (20) factor -> . LSET expression RSET
    (21) factor -> . LSET RSET
    (22) factor -> . LPAREN list RPAREN
    (29) factor -> . NUMBER
    (30) factor -> . VARIABLE

    RBRACKET        shift and go to state 38
    PLUS            shift and go to state 24
    MINUS           shift and go to state 28
    TIMES           shift and go to state 23
    DIVIDE          shift and go to state 21
    EXP             shift and go to state 25
    FACTORIAL       shift and go to state 22
    CHOOSE          shift and go to state 6
    LPAREN          shift and go to state 9
    LBRACKET        shift and go to state 3
    LSET            shift and go to state 5
    NUMBER          shift and go to state 2
    VARIABLE        shift and go to state 4

    factor                         shift and go to state 26

state 15

    (16) factor -> LBRACKET expression . RBRACKET
    (4) expression -> expression . PLUS factor
    (6) expression -> expression . MINUS factor

    RBRACKET        shift and go to state 39
    PLUS            shift and go to state 32
    MINUS           shift and go to state 34


state 16

    (19) factor -> LSET list . RSET
    (24) list -> list . expression COMMA
    (25) list -> list . expression
    (27) list -> list . factor COMMA
    (28) list -> list . factor
    (4) expression -> . expression PLUS factor
    (5) expression -> . factor PLUS factor
    (6) expression -> . expression MINUS factor
    (7) expression -> . factor MINUS factor
    (8) factor -> . factor TIMES factor
    (9) factor -> . factor DIVIDE factor
    (10) factor -> . factor EXP factor
    (11) factor -> . factor factor
    (12) factor -> . MINUS factor
    (13) factor -> . factor FACTORIAL
    (14) factor -> . CHOOSE LPAREN list RPAREN
    (15) factor -> . LPAREN expression RPAREN
    (16) factor -> . LBRACKET expression RBRACKET
    (17) factor -> . LPAREN factor RPAREN
    (18) factor -> . LBRACKET factor RBRACKET
    (19) factor -> . LSET list RSET
    (20) factor -> . LSET expression RSET
    (21) factor -> . LSET RSET
    (22) factor -> . LPAREN list RPAREN
    (29) factor -> . NUMBER
    (30) factor -> . VARIABLE

    RSET            shift and go to state 40
    MINUS           shift and go to state 11
    CHOOSE          shift and go to state 6
    LPAREN          shift and go to state 9
    LBRACKET        shift and go to state 3
    LSET            shift and go to state 5
    NUMBER          shift and go to state 2
    VARIABLE        shift and go to state 4

    expression                     shift and go to state 13
    factor                         shift and go to state 12

state 17

    (21) factor -> LSET RSET .

    TIMES           reduce using rule 21 (factor -> LSET RSET .)
    DIVIDE          reduce using rule 21 (factor -> LSET RSET .)
    EXP             reduce using rule 21 (factor -> LSET RSET .)
    FACTORIAL       reduce using rule 21 (factor -> LSET RSET .)
    MINUS           reduce using rule 21 (factor -> LSET RSET .)
    CHOOSE          reduce using rule 21 (factor -> LSET RSET .)
    LPAREN          reduce using rule 21 (factor -> LSET RSET .)
    LBRACKET        reduce using rule 21 (factor -> LSET RSET .)
    LSET            reduce using rule 21 (factor -> LSET RSET .)
    NUMBER          reduce using rule 21 (factor -> LSET RSET .)
    VARIABLE        reduce using rule 21 (factor -> LSET RSET .)
    COMMA           reduce using rule 21 (factor -> LSET RSET .)
    PLUS            reduce using rule 21 (factor -> LSET RSET .)
    $end            reduce using rule 21 (factor -> LSET RSET .)
    RBRACKET        reduce using rule 21 (factor -> LSET RSET .)
    RPAREN          reduce using rule 21 (factor -> LSET RSET .)
    RSET            reduce using rule 21 (factor -> LSET RSET .)


state 18

    (26) list -> factor . COMMA
    (5) expression -> factor . PLUS factor
    (7) expression -> factor . MINUS factor
    (8) factor -> factor . TIMES factor
    (9) factor -> factor . DIVIDE factor
    (10) factor -> factor . EXP factor
    (11) factor -> factor . factor
    (13) factor -> factor . FACTORIAL
    (8) factor -> . factor TIMES factor
    (9) factor -> . factor DIVIDE factor
    (10) factor -> . factor EXP factor
    (11) factor -> . factor factor
    (12) factor -> . MINUS factor
    (13) factor -> . factor FACTORIAL
    (14) factor -> . CHOOSE LPAREN list RPAREN
    (15) factor -> . LPAREN expression RPAREN
    (16) factor -> . LBRACKET expression RBRACKET
    (17) factor -> . LPAREN factor RPAREN
    (18) factor -> . LBRACKET factor RBRACKET
    (19) factor -> . LSET list RSET
    (20) factor -> . LSET expression RSET
    (21) factor -> . LSET RSET
    (22) factor -> . LPAREN list RPAREN
    (29) factor -> . NUMBER
    (30) factor -> . VARIABLE

    COMMA           shift and go to state 27
    PLUS            shift and go to state 24
    MINUS           shift and go to state 28
    TIMES           shift and go to state 23
    DIVIDE          shift and go to state 21
    EXP             shift and go to state 25
    FACTORIAL       shift and go to state 22
    CHOOSE          shift and go to state 6
    LPAREN          shift and go to state 9
    LBRACKET        shift and go to state 3
    LSET            shift and go to state 5
    NUMBER          shift and go to state 2
    VARIABLE        shift and go to state 4

    factor                         shift and go to state 26

state 19

    (20) factor -> LSET expression . RSET
    (23) list -> expression . COMMA
    (4) expression -> expression . PLUS factor
    (6) expression -> expression . MINUS factor

    RSET            shift and go to state 41
    COMMA           shift and go to state 33
    PLUS            shift and go to state 32
    MINUS           shift and go to state 34


state 20

    (14) factor -> CHOOSE LPAREN . list RPAREN
    (23) list -> . expression COMMA
    (24) list -> . list expression COMMA
    (25) list -> . list expression
    (26) list -> . factor COMMA
    (27) list -> . list factor COMMA
    (28) list -> . list factor
    (4) expression -> . expression PLUS factor
    (5) expression -> . factor PLUS factor
    (6) expression -> . expression MINUS factor
    (7) expression -> . factor MINUS factor
    (8) factor -> . factor TIMES factor
    (9) factor -> . factor DIVIDE factor
    (10) factor -> . factor EXP factor
    (11) factor -> . factor factor
    (12) factor -> . MINUS factor
    (13) factor -> . factor FACTORIAL
    (14) factor -> . CHOOSE LPAREN list RPAREN
    (15) factor -> . LPAREN expression RPAREN
    (16) factor -> . LBRACKET expression RBRACKET
    (17) factor -> . LPAREN factor RPAREN
    (18) factor -> . LBRACKET factor RBRACKET
    (19) factor -> . LSET list RSET
    (20) factor -> . LSET expression RSET
    (21) factor -> . LSET RSET
    (22) factor -> . LPAREN list RPAREN
    (29) factor -> . NUMBER
    (30) factor -> . VARIABLE

    MINUS           shift and go to state 11
    CHOOSE          shift and go to state 6
    LPAREN          shift and go to state 9
    LBRACKET        shift and go to state 3
    LSET            shift and go to state 5
    NUMBER          shift and go to state 2
    VARIABLE        shift and go to state 4

    expression                     shift and go to state 43
    list                           shift and go to state 42
    factor                         shift and go to state 18

state 21

    (9) factor -> factor DIVIDE . factor
    (8) factor -> . factor TIMES factor
    (9) factor -> . factor DIVIDE factor
    (10) factor -> . factor EXP factor
    (11) factor -> . factor factor
    (12) factor -> . MINUS factor
    (13) factor -> . factor FACTORIAL
    (14) factor -> . CHOOSE LPAREN list RPAREN
    (15) factor -> . LPAREN expression RPAREN
    (16) factor -> . LBRACKET expression RBRACKET
    (17) factor -> . LPAREN factor RPAREN
    (18) factor -> . LBRACKET factor RBRACKET
    (19) factor -> . LSET list RSET
    (20) factor -> . LSET expression RSET
    (21) factor -> . LSET RSET
    (22) factor -> . LPAREN list RPAREN
    (29) factor -> . NUMBER
    (30) factor -> . VARIABLE

    MINUS           shift and go to state 11
    CHOOSE          shift and go to state 6
    LPAREN          shift and go to state 9
    LBRACKET        shift and go to state 3
    LSET            shift and go to state 5
    NUMBER          shift and go to state 2
    VARIABLE        shift and go to state 4

    factor                         shift and go to state 44

state 22

    (13) factor -> factor FACTORIAL .

    TIMES           reduce using rule 13 (factor -> factor FACTORIAL .)
    DIVIDE          reduce using rule 13 (factor -> factor FACTORIAL .)
    EXP             reduce using rule 13 (factor -> factor FACTORIAL .)
    FACTORIAL       reduce using rule 13 (factor -> factor FACTORIAL .)
    MINUS           reduce using rule 13 (factor -> factor FACTORIAL .)
    CHOOSE          reduce using rule 13 (factor -> factor FACTORIAL .)
    LPAREN          reduce using rule 13 (factor -> factor FACTORIAL .)
    LBRACKET        reduce using rule 13 (factor -> factor FACTORIAL .)
    LSET            reduce using rule 13 (factor -> factor FACTORIAL .)
    NUMBER          reduce using rule 13 (factor -> factor FACTORIAL .)
    VARIABLE        reduce using rule 13 (factor -> factor FACTORIAL .)
    COMMA           reduce using rule 13 (factor -> factor FACTORIAL .)
    PLUS            reduce using rule 13 (factor -> factor FACTORIAL .)
    $end            reduce using rule 13 (factor -> factor FACTORIAL .)
    RBRACKET        reduce using rule 13 (factor -> factor FACTORIAL .)
    RPAREN          reduce using rule 13 (factor -> factor FACTORIAL .)
    RSET            reduce using rule 13 (factor -> factor FACTORIAL .)


state 23

    (8) factor -> factor TIMES . factor
    (8) factor -> . factor TIMES factor
    (9) factor -> . factor DIVIDE factor
    (10) factor -> . factor EXP factor
    (11) factor -> . factor factor
    (12) factor -> . MINUS factor
    (13) factor -> . factor FACTORIAL
    (14) factor -> . CHOOSE LPAREN list RPAREN
    (15) factor -> . LPAREN expression RPAREN
    (16) factor -> . LBRACKET expression RBRACKET
    (17) factor -> . LPAREN factor RPAREN
    (18) factor -> . LBRACKET factor RBRACKET
    (19) factor -> . LSET list RSET
    (20) factor -> . LSET expression RSET
    (21) factor -> . LSET RSET
    (22) factor -> . LPAREN list RPAREN
    (29) factor -> . NUMBER
    (30) factor -> . VARIABLE

    MINUS           shift and go to state 11
    CHOOSE          shift and go to state 6
    LPAREN          shift and go to state 9
    LBRACKET        shift and go to state 3
    LSET            shift and go to state 5
    NUMBER          shift and go to state 2
    VARIABLE        shift and go to state 4

    factor                         shift and go to state 45

state 24

    (5) expression -> factor PLUS . factor
    (8) factor -> . factor TIMES factor
    (9) factor -> . factor DIVIDE factor
    (10) factor -> . factor EXP factor
    (11) factor -> . factor factor
    (12) factor -> . MINUS factor
    (13) factor -> . factor FACTORIAL
    (14) factor -> . CHOOSE LPAREN list RPAREN
    (15) factor -> . LPAREN expression RPAREN
    (16) factor -> . LBRACKET expression RBRACKET
    (17) factor -> . LPAREN factor RPAREN
    (18) factor -> . LBRACKET factor RBRACKET
    (19) factor -> . LSET list RSET
    (20) factor -> . LSET expression RSET
    (21) factor -> . LSET RSET
    (22) factor -> . LPAREN list RPAREN
    (29) factor -> . NUMBER
    (30) factor -> . VARIABLE

    MINUS           shift and go to state 11
    CHOOSE          shift and go to state 6
    LPAREN          shift and go to state 9
    LBRACKET        shift and go to state 3
    LSET            shift and go to state 5
    NUMBER          shift and go to state 2
    VARIABLE        shift and go to state 4

    factor                         shift and go to state 46

state 25

    (10) factor -> factor EXP . factor
    (8) factor -> . factor TIMES factor
    (9) factor -> . factor DIVIDE factor
    (10) factor -> . factor EXP factor
    (11) factor -> . factor factor
    (12) factor -> . MINUS factor
    (13) factor -> . factor FACTORIAL
    (14) factor -> . CHOOSE LPAREN list RPAREN
    (15) factor -> . LPAREN expression RPAREN
    (16) factor -> . LBRACKET expression RBRACKET
    (17) factor -> . LPAREN factor RPAREN
    (18) factor -> . LBRACKET factor RBRACKET
    (19) factor -> . LSET list RSET
    (20) factor -> . LSET expression RSET
    (21) factor -> . LSET RSET
    (22) factor -> . LPAREN list RPAREN
    (29) factor -> . NUMBER
    (30) factor -> . VARIABLE

    MINUS           shift and go to state 11
    CHOOSE          shift and go to state 6
    LPAREN          shift and go to state 9
    LBRACKET        shift and go to state 3
    LSET            shift and go to state 5
    NUMBER          shift and go to state 2
    VARIABLE        shift and go to state 4

    factor                         shift and go to state 47

state 26

    (11) factor -> factor factor .
    (8) factor -> factor . TIMES factor
    (9) factor -> factor . DIVIDE factor
    (10) factor -> factor . EXP factor
    (11) factor -> factor . factor
    (13) factor -> factor . FACTORIAL
    (8) factor -> . factor TIMES factor
    (9) factor -> . factor DIVIDE factor
    (10) factor -> . factor EXP factor
    (11) factor -> . factor factor
    (12) factor -> . MINUS factor
    (13) factor -> . factor FACTORIAL
    (14) factor -> . CHOOSE LPAREN list RPAREN
    (15) factor -> . LPAREN expression RPAREN
    (16) factor -> . LBRACKET expression RBRACKET
    (17) factor -> . LPAREN factor RPAREN
    (18) factor -> . LBRACKET factor RBRACKET
    (19) factor -> . LSET list RSET
    (20) factor -> . LSET expression RSET
    (21) factor -> . LSET RSET
    (22) factor -> . LPAREN list RPAREN
    (29) factor -> . NUMBER
    (30) factor -> . VARIABLE

    LPAREN          reduce using rule 11 (factor -> factor factor .)
    LBRACKET        reduce using rule 11 (factor -> factor factor .)
    LSET            reduce using rule 11 (factor -> factor factor .)
    NUMBER          reduce using rule 11 (factor -> factor factor .)
    VARIABLE        reduce using rule 11 (factor -> factor factor .)
    COMMA           reduce using rule 11 (factor -> factor factor .)
    PLUS            reduce using rule 11 (factor -> factor factor .)
    $end            reduce using rule 11 (factor -> factor factor .)
    RBRACKET        reduce using rule 11 (factor -> factor factor .)
    RPAREN          reduce using rule 11 (factor -> factor factor .)
    RSET            reduce using rule 11 (factor -> factor factor .)
    TIMES           shift and go to state 23
    DIVIDE          shift and go to state 21
    EXP             shift and go to state 25
    FACTORIAL       shift and go to state 22
    MINUS           shift and go to state 11
    CHOOSE          shift and go to state 6

  ! TIMES           [ reduce using rule 11 (factor -> factor factor .) ]
  ! DIVIDE          [ reduce using rule 11 (factor -> factor factor .) ]
  ! EXP             [ reduce using rule 11 (factor -> factor factor .) ]
  ! FACTORIAL       [ reduce using rule 11 (factor -> factor factor .) ]
  ! MINUS           [ reduce using rule 11 (factor -> factor factor .) ]
  ! CHOOSE          [ reduce using rule 11 (factor -> factor factor .) ]
  ! LPAREN          [ shift and go to state 9 ]
  ! LBRACKET        [ shift and go to state 3 ]
  ! LSET            [ shift and go to state 5 ]
  ! NUMBER          [ shift and go to state 2 ]
  ! VARIABLE        [ shift and go to state 4 ]

    factor                         shift and go to state 26

state 27

    (26) list -> factor COMMA .

    RPAREN          reduce using rule 26 (list -> factor COMMA .)
    MINUS           reduce using rule 26 (list -> factor COMMA .)
    CHOOSE          reduce using rule 26 (list -> factor COMMA .)
    LPAREN          reduce using rule 26 (list -> factor COMMA .)
    LBRACKET        reduce using rule 26 (list -> factor COMMA .)
    LSET            reduce using rule 26 (list -> factor COMMA .)
    NUMBER          reduce using rule 26 (list -> factor COMMA .)
    VARIABLE        reduce using rule 26 (list -> factor COMMA .)
    RSET            reduce using rule 26 (list -> factor COMMA .)
    $end            reduce using rule 26 (list -> factor COMMA .)


state 28

    (7) expression -> factor MINUS . factor
    (12) factor -> MINUS . factor
    (8) factor -> . factor TIMES factor
    (9) factor -> . factor DIVIDE factor
    (10) factor -> . factor EXP factor
    (11) factor -> . factor factor
    (12) factor -> . MINUS factor
    (13) factor -> . factor FACTORIAL
    (14) factor -> . CHOOSE LPAREN list RPAREN
    (15) factor -> . LPAREN expression RPAREN
    (16) factor -> . LBRACKET expression RBRACKET
    (17) factor -> . LPAREN factor RPAREN
    (18) factor -> . LBRACKET factor RBRACKET
    (19) factor -> . LSET list RSET
    (20) factor -> . LSET expression RSET
    (21) factor -> . LSET RSET
    (22) factor -> . LPAREN list RPAREN
    (29) factor -> . NUMBER
    (30) factor -> . VARIABLE

    MINUS           shift and go to state 11
    CHOOSE          shift and go to state 6
    LPAREN          shift and go to state 9
    LBRACKET        shift and go to state 3
    LSET            shift and go to state 5
    NUMBER          shift and go to state 2
    VARIABLE        shift and go to state 4

    factor                         shift and go to state 48

state 29

    (22) factor -> LPAREN list . RPAREN
    (24) list -> list . expression COMMA
    (25) list -> list . expression
    (27) list -> list . factor COMMA
    (28) list -> list . factor
    (4) expression -> . expression PLUS factor
    (5) expression -> . factor PLUS factor
    (6) expression -> . expression MINUS factor
    (7) expression -> . factor MINUS factor
    (8) factor -> . factor TIMES factor
    (9) factor -> . factor DIVIDE factor
    (10) factor -> . factor EXP factor
    (11) factor -> . factor factor
    (12) factor -> . MINUS factor
    (13) factor -> . factor FACTORIAL
    (14) factor -> . CHOOSE LPAREN list RPAREN
    (15) factor -> . LPAREN expression RPAREN
    (16) factor -> . LBRACKET expression RBRACKET
    (17) factor -> . LPAREN factor RPAREN
    (18) factor -> . LBRACKET factor RBRACKET
    (19) factor -> . LSET list RSET
    (20) factor -> . LSET expression RSET
    (21) factor -> . LSET RSET
    (22) factor -> . LPAREN list RPAREN
    (29) factor -> . NUMBER
    (30) factor -> . VARIABLE

    RPAREN          shift and go to state 49
    MINUS           shift and go to state 11
    CHOOSE          shift and go to state 6
    LPAREN          shift and go to state 9
    LBRACKET        shift and go to state 3
    LSET            shift and go to state 5
    NUMBER          shift and go to state 2
    VARIABLE        shift and go to state 4

    expression                     shift and go to state 13
    factor                         shift and go to state 12

state 30

    (17) factor -> LPAREN factor . RPAREN
    (5) expression -> factor . PLUS factor
    (7) expression -> factor . MINUS factor
    (8) factor -> factor . TIMES factor
    (9) factor -> factor . DIVIDE factor
    (10) factor -> factor . EXP factor
    (11) factor -> factor . factor
    (13) factor -> factor . FACTORIAL
    (26) list -> factor . COMMA
    (8) factor -> . factor TIMES factor
    (9) factor -> . factor DIVIDE factor
    (10) factor -> . factor EXP factor
    (11) factor -> . factor factor
    (12) factor -> . MINUS factor
    (13) factor -> . factor FACTORIAL
    (14) factor -> . CHOOSE LPAREN list RPAREN
    (15) factor -> . LPAREN expression RPAREN
    (16) factor -> . LBRACKET expression RBRACKET
    (17) factor -> . LPAREN factor RPAREN
    (18) factor -> . LBRACKET factor RBRACKET
    (19) factor -> . LSET list RSET
    (20) factor -> . LSET expression RSET
    (21) factor -> . LSET RSET
    (22) factor -> . LPAREN list RPAREN
    (29) factor -> . NUMBER
    (30) factor -> . VARIABLE

    RPAREN          shift and go to state 50
    PLUS            shift and go to state 24
    MINUS           shift and go to state 28
    TIMES           shift and go to state 23
    DIVIDE          shift and go to state 21
    EXP             shift and go to state 25
    FACTORIAL       shift and go to state 22
    COMMA           shift and go to state 27
    CHOOSE          shift and go to state 6
    LPAREN          shift and go to state 9
    LBRACKET        shift and go to state 3
    LSET            shift and go to state 5
    NUMBER          shift and go to state 2
    VARIABLE        shift and go to state 4

    factor                         shift and go to state 26

state 31

    (15) factor -> LPAREN expression . RPAREN
    (4) expression -> expression . PLUS factor
    (6) expression -> expression . MINUS factor
    (23) list -> expression . COMMA

    RPAREN          shift and go to state 51
    PLUS            shift and go to state 32
    MINUS           shift and go to state 34
    COMMA           shift and go to state 33


state 32

    (4) expression -> expression PLUS . factor
    (8) factor -> . factor TIMES factor
    (9) factor -> . factor DIVIDE factor
    (10) factor -> . factor EXP factor
    (11) factor -> . factor factor
    (12) factor -> . MINUS factor
    (13) factor -> . factor FACTORIAL
    (14) factor -> . CHOOSE LPAREN list RPAREN
    (15) factor -> . LPAREN expression RPAREN
    (16) factor -> . LBRACKET expression RBRACKET
    (17) factor -> . LPAREN factor RPAREN
    (18) factor -> . LBRACKET factor RBRACKET
    (19) factor -> . LSET list RSET
    (20) factor -> . LSET expression RSET
    (21) factor -> . LSET RSET
    (22) factor -> . LPAREN list RPAREN
    (29) factor -> . NUMBER
    (30) factor -> . VARIABLE

    MINUS           shift and go to state 11
    CHOOSE          shift and go to state 6
    LPAREN          shift and go to state 9
    LBRACKET        shift and go to state 3
    LSET            shift and go to state 5
    NUMBER          shift and go to state 2
    VARIABLE        shift and go to state 4

    factor                         shift and go to state 52

state 33

    (23) list -> expression COMMA .

    RPAREN          reduce using rule 23 (list -> expression COMMA .)
    MINUS           reduce using rule 23 (list -> expression COMMA .)
    CHOOSE          reduce using rule 23 (list -> expression COMMA .)
    LPAREN          reduce using rule 23 (list -> expression COMMA .)
    LBRACKET        reduce using rule 23 (list -> expression COMMA .)
    LSET            reduce using rule 23 (list -> expression COMMA .)
    NUMBER          reduce using rule 23 (list -> expression COMMA .)
    VARIABLE        reduce using rule 23 (list -> expression COMMA .)
    RSET            reduce using rule 23 (list -> expression COMMA .)
    $end            reduce using rule 23 (list -> expression COMMA .)


state 34

    (6) expression -> expression MINUS . factor
    (8) factor -> . factor TIMES factor
    (9) factor -> . factor DIVIDE factor
    (10) factor -> . factor EXP factor
    (11) factor -> . factor factor
    (12) factor -> . MINUS factor
    (13) factor -> . factor FACTORIAL
    (14) factor -> . CHOOSE LPAREN list RPAREN
    (15) factor -> . LPAREN expression RPAREN
    (16) factor -> . LBRACKET expression RBRACKET
    (17) factor -> . LPAREN factor RPAREN
    (18) factor -> . LBRACKET factor RBRACKET
    (19) factor -> . LSET list RSET
    (20) factor -> . LSET expression RSET
    (21) factor -> . LSET RSET
    (22) factor -> . LPAREN list RPAREN
    (29) factor -> . NUMBER
    (30) factor -> . VARIABLE

    MINUS           shift and go to state 11
    CHOOSE          shift and go to state 6
    LPAREN          shift and go to state 9
    LBRACKET        shift and go to state 3
    LSET            shift and go to state 5
    NUMBER          shift and go to state 2
    VARIABLE        shift and go to state 4

    factor                         shift and go to state 53

state 35

    (12) factor -> MINUS factor .
    (8) factor -> factor . TIMES factor
    (9) factor -> factor . DIVIDE factor
    (10) factor -> factor . EXP factor
    (11) factor -> factor . factor
    (13) factor -> factor . FACTORIAL
    (8) factor -> . factor TIMES factor
    (9) factor -> . factor DIVIDE factor
    (10) factor -> . factor EXP factor
    (11) factor -> . factor factor
    (12) factor -> . MINUS factor
    (13) factor -> . factor FACTORIAL
    (14) factor -> . CHOOSE LPAREN list RPAREN
    (15) factor -> . LPAREN expression RPAREN
    (16) factor -> . LBRACKET expression RBRACKET
    (17) factor -> . LPAREN factor RPAREN
    (18) factor -> . LBRACKET factor RBRACKET
    (19) factor -> . LSET list RSET
    (20) factor -> . LSET expression RSET
    (21) factor -> . LSET RSET
    (22) factor -> . LPAREN list RPAREN
    (29) factor -> . NUMBER
    (30) factor -> . VARIABLE

    COMMA           reduce using rule 12 (factor -> MINUS factor .)
    PLUS            reduce using rule 12 (factor -> MINUS factor .)
    LPAREN          reduce using rule 12 (factor -> MINUS factor .)
    LBRACKET        reduce using rule 12 (factor -> MINUS factor .)
    LSET            reduce using rule 12 (factor -> MINUS factor .)
    NUMBER          reduce using rule 12 (factor -> MINUS factor .)
    VARIABLE        reduce using rule 12 (factor -> MINUS factor .)
    $end            reduce using rule 12 (factor -> MINUS factor .)
    RBRACKET        reduce using rule 12 (factor -> MINUS factor .)
    RPAREN          reduce using rule 12 (factor -> MINUS factor .)
    RSET            reduce using rule 12 (factor -> MINUS factor .)
    TIMES           shift and go to state 23
    DIVIDE          shift and go to state 21
    EXP             shift and go to state 25
    FACTORIAL       shift and go to state 22
    MINUS           shift and go to state 11
    CHOOSE          shift and go to state 6

  ! MINUS           [ reduce using rule 12 (factor -> MINUS factor .) ]
  ! TIMES           [ reduce using rule 12 (factor -> MINUS factor .) ]
  ! DIVIDE          [ reduce using rule 12 (factor -> MINUS factor .) ]
  ! EXP             [ reduce using rule 12 (factor -> MINUS factor .) ]
  ! FACTORIAL       [ reduce using rule 12 (factor -> MINUS factor .) ]
  ! CHOOSE          [ reduce using rule 12 (factor -> MINUS factor .) ]
  ! LPAREN          [ shift and go to state 9 ]
  ! LBRACKET        [ shift and go to state 3 ]
  ! LSET            [ shift and go to state 5 ]
  ! NUMBER          [ shift and go to state 2 ]
  ! VARIABLE        [ shift and go to state 4 ]

    factor                         shift and go to state 26

state 36

    (27) list -> list factor COMMA .

    RPAREN          reduce using rule 27 (list -> list factor COMMA .)
    MINUS           reduce using rule 27 (list -> list factor COMMA .)
    CHOOSE          reduce using rule 27 (list -> list factor COMMA .)
    LPAREN          reduce using rule 27 (list -> list factor COMMA .)
    LBRACKET        reduce using rule 27 (list -> list factor COMMA .)
    LSET            reduce using rule 27 (list -> list factor COMMA .)
    NUMBER          reduce using rule 27 (list -> list factor COMMA .)
    VARIABLE        reduce using rule 27 (list -> list factor COMMA .)
    RSET            reduce using rule 27 (list -> list factor COMMA .)
    $end            reduce using rule 27 (list -> list factor COMMA .)


state 37

    (24) list -> list expression COMMA .

    RPAREN          reduce using rule 24 (list -> list expression COMMA .)
    MINUS           reduce using rule 24 (list -> list expression COMMA .)
    CHOOSE          reduce using rule 24 (list -> list expression COMMA .)
    LPAREN          reduce using rule 24 (list -> list expression COMMA .)
    LBRACKET        reduce using rule 24 (list -> list expression COMMA .)
    LSET            reduce using rule 24 (list -> list expression COMMA .)
    NUMBER          reduce using rule 24 (list -> list expression COMMA .)
    VARIABLE        reduce using rule 24 (list -> list expression COMMA .)
    RSET            reduce using rule 24 (list -> list expression COMMA .)
    $end            reduce using rule 24 (list -> list expression COMMA .)


state 38

    (18) factor -> LBRACKET factor RBRACKET .

    TIMES           reduce using rule 18 (factor -> LBRACKET factor RBRACKET .)
    DIVIDE          reduce using rule 18 (factor -> LBRACKET factor RBRACKET .)
    EXP             reduce using rule 18 (factor -> LBRACKET factor RBRACKET .)
    FACTORIAL       reduce using rule 18 (factor -> LBRACKET factor RBRACKET .)
    MINUS           reduce using rule 18 (factor -> LBRACKET factor RBRACKET .)
    CHOOSE          reduce using rule 18 (factor -> LBRACKET factor RBRACKET .)
    LPAREN          reduce using rule 18 (factor -> LBRACKET factor RBRACKET .)
    LBRACKET        reduce using rule 18 (factor -> LBRACKET factor RBRACKET .)
    LSET            reduce using rule 18 (factor -> LBRACKET factor RBRACKET .)
    NUMBER          reduce using rule 18 (factor -> LBRACKET factor RBRACKET .)
    VARIABLE        reduce using rule 18 (factor -> LBRACKET factor RBRACKET .)
    COMMA           reduce using rule 18 (factor -> LBRACKET factor RBRACKET .)
    PLUS            reduce using rule 18 (factor -> LBRACKET factor RBRACKET .)
    $end            reduce using rule 18 (factor -> LBRACKET factor RBRACKET .)
    RBRACKET        reduce using rule 18 (factor -> LBRACKET factor RBRACKET .)
    RPAREN          reduce using rule 18 (factor -> LBRACKET factor RBRACKET .)
    RSET            reduce using rule 18 (factor -> LBRACKET factor RBRACKET .)


state 39

    (16) factor -> LBRACKET expression RBRACKET .

    TIMES           reduce using rule 16 (factor -> LBRACKET expression RBRACKET .)
    DIVIDE          reduce using rule 16 (factor -> LBRACKET expression RBRACKET .)
    EXP             reduce using rule 16 (factor -> LBRACKET expression RBRACKET .)
    FACTORIAL       reduce using rule 16 (factor -> LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 16 (factor -> LBRACKET expression RBRACKET .)
    CHOOSE          reduce using rule 16 (factor -> LBRACKET expression RBRACKET .)
    LPAREN          reduce using rule 16 (factor -> LBRACKET expression RBRACKET .)
    LBRACKET        reduce using rule 16 (factor -> LBRACKET expression RBRACKET .)
    LSET            reduce using rule 16 (factor -> LBRACKET expression RBRACKET .)
    NUMBER          reduce using rule 16 (factor -> LBRACKET expression RBRACKET .)
    VARIABLE        reduce using rule 16 (factor -> LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 16 (factor -> LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 16 (factor -> LBRACKET expression RBRACKET .)
    $end            reduce using rule 16 (factor -> LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 16 (factor -> LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 16 (factor -> LBRACKET expression RBRACKET .)
    RSET            reduce using rule 16 (factor -> LBRACKET expression RBRACKET .)


state 40

    (19) factor -> LSET list RSET .

    TIMES           reduce using rule 19 (factor -> LSET list RSET .)
    DIVIDE          reduce using rule 19 (factor -> LSET list RSET .)
    EXP             reduce using rule 19 (factor -> LSET list RSET .)
    FACTORIAL       reduce using rule 19 (factor -> LSET list RSET .)
    MINUS           reduce using rule 19 (factor -> LSET list RSET .)
    CHOOSE          reduce using rule 19 (factor -> LSET list RSET .)
    LPAREN          reduce using rule 19 (factor -> LSET list RSET .)
    LBRACKET        reduce using rule 19 (factor -> LSET list RSET .)
    LSET            reduce using rule 19 (factor -> LSET list RSET .)
    NUMBER          reduce using rule 19 (factor -> LSET list RSET .)
    VARIABLE        reduce using rule 19 (factor -> LSET list RSET .)
    COMMA           reduce using rule 19 (factor -> LSET list RSET .)
    PLUS            reduce using rule 19 (factor -> LSET list RSET .)
    $end            reduce using rule 19 (factor -> LSET list RSET .)
    RBRACKET        reduce using rule 19 (factor -> LSET list RSET .)
    RPAREN          reduce using rule 19 (factor -> LSET list RSET .)
    RSET            reduce using rule 19 (factor -> LSET list RSET .)


state 41

    (20) factor -> LSET expression RSET .

    TIMES           reduce using rule 20 (factor -> LSET expression RSET .)
    DIVIDE          reduce using rule 20 (factor -> LSET expression RSET .)
    EXP             reduce using rule 20 (factor -> LSET expression RSET .)
    FACTORIAL       reduce using rule 20 (factor -> LSET expression RSET .)
    MINUS           reduce using rule 20 (factor -> LSET expression RSET .)
    CHOOSE          reduce using rule 20 (factor -> LSET expression RSET .)
    LPAREN          reduce using rule 20 (factor -> LSET expression RSET .)
    LBRACKET        reduce using rule 20 (factor -> LSET expression RSET .)
    LSET            reduce using rule 20 (factor -> LSET expression RSET .)
    NUMBER          reduce using rule 20 (factor -> LSET expression RSET .)
    VARIABLE        reduce using rule 20 (factor -> LSET expression RSET .)
    COMMA           reduce using rule 20 (factor -> LSET expression RSET .)
    PLUS            reduce using rule 20 (factor -> LSET expression RSET .)
    $end            reduce using rule 20 (factor -> LSET expression RSET .)
    RBRACKET        reduce using rule 20 (factor -> LSET expression RSET .)
    RPAREN          reduce using rule 20 (factor -> LSET expression RSET .)
    RSET            reduce using rule 20 (factor -> LSET expression RSET .)


state 42

    (14) factor -> CHOOSE LPAREN list . RPAREN
    (24) list -> list . expression COMMA
    (25) list -> list . expression
    (27) list -> list . factor COMMA
    (28) list -> list . factor
    (4) expression -> . expression PLUS factor
    (5) expression -> . factor PLUS factor
    (6) expression -> . expression MINUS factor
    (7) expression -> . factor MINUS factor
    (8) factor -> . factor TIMES factor
    (9) factor -> . factor DIVIDE factor
    (10) factor -> . factor EXP factor
    (11) factor -> . factor factor
    (12) factor -> . MINUS factor
    (13) factor -> . factor FACTORIAL
    (14) factor -> . CHOOSE LPAREN list RPAREN
    (15) factor -> . LPAREN expression RPAREN
    (16) factor -> . LBRACKET expression RBRACKET
    (17) factor -> . LPAREN factor RPAREN
    (18) factor -> . LBRACKET factor RBRACKET
    (19) factor -> . LSET list RSET
    (20) factor -> . LSET expression RSET
    (21) factor -> . LSET RSET
    (22) factor -> . LPAREN list RPAREN
    (29) factor -> . NUMBER
    (30) factor -> . VARIABLE

    RPAREN          shift and go to state 54
    MINUS           shift and go to state 11
    CHOOSE          shift and go to state 6
    LPAREN          shift and go to state 9
    LBRACKET        shift and go to state 3
    LSET            shift and go to state 5
    NUMBER          shift and go to state 2
    VARIABLE        shift and go to state 4

    expression                     shift and go to state 13
    factor                         shift and go to state 12

state 43

    (23) list -> expression . COMMA
    (4) expression -> expression . PLUS factor
    (6) expression -> expression . MINUS factor

    COMMA           shift and go to state 33
    PLUS            shift and go to state 32
    MINUS           shift and go to state 34


state 44

    (9) factor -> factor DIVIDE factor .
    (8) factor -> factor . TIMES factor
    (9) factor -> factor . DIVIDE factor
    (10) factor -> factor . EXP factor
    (11) factor -> factor . factor
    (13) factor -> factor . FACTORIAL
    (8) factor -> . factor TIMES factor
    (9) factor -> . factor DIVIDE factor
    (10) factor -> . factor EXP factor
    (11) factor -> . factor factor
    (12) factor -> . MINUS factor
    (13) factor -> . factor FACTORIAL
    (14) factor -> . CHOOSE LPAREN list RPAREN
    (15) factor -> . LPAREN expression RPAREN
    (16) factor -> . LBRACKET expression RBRACKET
    (17) factor -> . LPAREN factor RPAREN
    (18) factor -> . LBRACKET factor RBRACKET
    (19) factor -> . LSET list RSET
    (20) factor -> . LSET expression RSET
    (21) factor -> . LSET RSET
    (22) factor -> . LPAREN list RPAREN
    (29) factor -> . NUMBER
    (30) factor -> . VARIABLE

    TIMES           reduce using rule 9 (factor -> factor DIVIDE factor .)
    DIVIDE          reduce using rule 9 (factor -> factor DIVIDE factor .)
    MINUS           reduce using rule 9 (factor -> factor DIVIDE factor .)
    LPAREN          reduce using rule 9 (factor -> factor DIVIDE factor .)
    LBRACKET        reduce using rule 9 (factor -> factor DIVIDE factor .)
    LSET            reduce using rule 9 (factor -> factor DIVIDE factor .)
    NUMBER          reduce using rule 9 (factor -> factor DIVIDE factor .)
    VARIABLE        reduce using rule 9 (factor -> factor DIVIDE factor .)
    COMMA           reduce using rule 9 (factor -> factor DIVIDE factor .)
    PLUS            reduce using rule 9 (factor -> factor DIVIDE factor .)
    $end            reduce using rule 9 (factor -> factor DIVIDE factor .)
    RBRACKET        reduce using rule 9 (factor -> factor DIVIDE factor .)
    RPAREN          reduce using rule 9 (factor -> factor DIVIDE factor .)
    RSET            reduce using rule 9 (factor -> factor DIVIDE factor .)
    EXP             shift and go to state 25
    FACTORIAL       shift and go to state 22
    CHOOSE          shift and go to state 6

  ! EXP             [ reduce using rule 9 (factor -> factor DIVIDE factor .) ]
  ! FACTORIAL       [ reduce using rule 9 (factor -> factor DIVIDE factor .) ]
  ! CHOOSE          [ reduce using rule 9 (factor -> factor DIVIDE factor .) ]
  ! TIMES           [ shift and go to state 23 ]
  ! DIVIDE          [ shift and go to state 21 ]
  ! MINUS           [ shift and go to state 11 ]
  ! LPAREN          [ shift and go to state 9 ]
  ! LBRACKET        [ shift and go to state 3 ]
  ! LSET            [ shift and go to state 5 ]
  ! NUMBER          [ shift and go to state 2 ]
  ! VARIABLE        [ shift and go to state 4 ]

    factor                         shift and go to state 26

state 45

    (8) factor -> factor TIMES factor .
    (8) factor -> factor . TIMES factor
    (9) factor -> factor . DIVIDE factor
    (10) factor -> factor . EXP factor
    (11) factor -> factor . factor
    (13) factor -> factor . FACTORIAL
    (8) factor -> . factor TIMES factor
    (9) factor -> . factor DIVIDE factor
    (10) factor -> . factor EXP factor
    (11) factor -> . factor factor
    (12) factor -> . MINUS factor
    (13) factor -> . factor FACTORIAL
    (14) factor -> . CHOOSE LPAREN list RPAREN
    (15) factor -> . LPAREN expression RPAREN
    (16) factor -> . LBRACKET expression RBRACKET
    (17) factor -> . LPAREN factor RPAREN
    (18) factor -> . LBRACKET factor RBRACKET
    (19) factor -> . LSET list RSET
    (20) factor -> . LSET expression RSET
    (21) factor -> . LSET RSET
    (22) factor -> . LPAREN list RPAREN
    (29) factor -> . NUMBER
    (30) factor -> . VARIABLE

    TIMES           reduce using rule 8 (factor -> factor TIMES factor .)
    DIVIDE          reduce using rule 8 (factor -> factor TIMES factor .)
    MINUS           reduce using rule 8 (factor -> factor TIMES factor .)
    LPAREN          reduce using rule 8 (factor -> factor TIMES factor .)
    LBRACKET        reduce using rule 8 (factor -> factor TIMES factor .)
    LSET            reduce using rule 8 (factor -> factor TIMES factor .)
    NUMBER          reduce using rule 8 (factor -> factor TIMES factor .)
    VARIABLE        reduce using rule 8 (factor -> factor TIMES factor .)
    COMMA           reduce using rule 8 (factor -> factor TIMES factor .)
    PLUS            reduce using rule 8 (factor -> factor TIMES factor .)
    $end            reduce using rule 8 (factor -> factor TIMES factor .)
    RBRACKET        reduce using rule 8 (factor -> factor TIMES factor .)
    RPAREN          reduce using rule 8 (factor -> factor TIMES factor .)
    RSET            reduce using rule 8 (factor -> factor TIMES factor .)
    EXP             shift and go to state 25
    FACTORIAL       shift and go to state 22
    CHOOSE          shift and go to state 6

  ! EXP             [ reduce using rule 8 (factor -> factor TIMES factor .) ]
  ! FACTORIAL       [ reduce using rule 8 (factor -> factor TIMES factor .) ]
  ! CHOOSE          [ reduce using rule 8 (factor -> factor TIMES factor .) ]
  ! TIMES           [ shift and go to state 23 ]
  ! DIVIDE          [ shift and go to state 21 ]
  ! MINUS           [ shift and go to state 11 ]
  ! LPAREN          [ shift and go to state 9 ]
  ! LBRACKET        [ shift and go to state 3 ]
  ! LSET            [ shift and go to state 5 ]
  ! NUMBER          [ shift and go to state 2 ]
  ! VARIABLE        [ shift and go to state 4 ]

    factor                         shift and go to state 26

state 46

    (5) expression -> factor PLUS factor .
    (8) factor -> factor . TIMES factor
    (9) factor -> factor . DIVIDE factor
    (10) factor -> factor . EXP factor
    (11) factor -> factor . factor
    (13) factor -> factor . FACTORIAL
    (8) factor -> . factor TIMES factor
    (9) factor -> . factor DIVIDE factor
    (10) factor -> . factor EXP factor
    (11) factor -> . factor factor
    (12) factor -> . MINUS factor
    (13) factor -> . factor FACTORIAL
    (14) factor -> . CHOOSE LPAREN list RPAREN
    (15) factor -> . LPAREN expression RPAREN
    (16) factor -> . LBRACKET expression RBRACKET
    (17) factor -> . LPAREN factor RPAREN
    (18) factor -> . LBRACKET factor RBRACKET
    (19) factor -> . LSET list RSET
    (20) factor -> . LSET expression RSET
    (21) factor -> . LSET RSET
    (22) factor -> . LPAREN list RPAREN
    (29) factor -> . NUMBER
    (30) factor -> . VARIABLE

    RPAREN          reduce using rule 5 (expression -> factor PLUS factor .)
    PLUS            reduce using rule 5 (expression -> factor PLUS factor .)
    MINUS           reduce using rule 5 (expression -> factor PLUS factor .)
    COMMA           reduce using rule 5 (expression -> factor PLUS factor .)
    LPAREN          reduce using rule 5 (expression -> factor PLUS factor .)
    LBRACKET        reduce using rule 5 (expression -> factor PLUS factor .)
    LSET            reduce using rule 5 (expression -> factor PLUS factor .)
    NUMBER          reduce using rule 5 (expression -> factor PLUS factor .)
    VARIABLE        reduce using rule 5 (expression -> factor PLUS factor .)
    RSET            reduce using rule 5 (expression -> factor PLUS factor .)
    RBRACKET        reduce using rule 5 (expression -> factor PLUS factor .)
    $end            reduce using rule 5 (expression -> factor PLUS factor .)
    TIMES           shift and go to state 23
    DIVIDE          shift and go to state 21
    EXP             shift and go to state 25
    FACTORIAL       shift and go to state 22
    CHOOSE          shift and go to state 6

  ! CHOOSE          [ reduce using rule 5 (expression -> factor PLUS factor .) ]
  ! MINUS           [ shift and go to state 11 ]
  ! LPAREN          [ shift and go to state 9 ]
  ! LBRACKET        [ shift and go to state 3 ]
  ! LSET            [ shift and go to state 5 ]
  ! NUMBER          [ shift and go to state 2 ]
  ! VARIABLE        [ shift and go to state 4 ]

    factor                         shift and go to state 26

state 47

    (10) factor -> factor EXP factor .
    (8) factor -> factor . TIMES factor
    (9) factor -> factor . DIVIDE factor
    (10) factor -> factor . EXP factor
    (11) factor -> factor . factor
    (13) factor -> factor . FACTORIAL
    (8) factor -> . factor TIMES factor
    (9) factor -> . factor DIVIDE factor
    (10) factor -> . factor EXP factor
    (11) factor -> . factor factor
    (12) factor -> . MINUS factor
    (13) factor -> . factor FACTORIAL
    (14) factor -> . CHOOSE LPAREN list RPAREN
    (15) factor -> . LPAREN expression RPAREN
    (16) factor -> . LBRACKET expression RBRACKET
    (17) factor -> . LPAREN factor RPAREN
    (18) factor -> . LBRACKET factor RBRACKET
    (19) factor -> . LSET list RSET
    (20) factor -> . LSET expression RSET
    (21) factor -> . LSET RSET
    (22) factor -> . LPAREN list RPAREN
    (29) factor -> . NUMBER
    (30) factor -> . VARIABLE

    TIMES           reduce using rule 10 (factor -> factor EXP factor .)
    DIVIDE          reduce using rule 10 (factor -> factor EXP factor .)
    EXP             reduce using rule 10 (factor -> factor EXP factor .)
    MINUS           reduce using rule 10 (factor -> factor EXP factor .)
    LPAREN          reduce using rule 10 (factor -> factor EXP factor .)
    LBRACKET        reduce using rule 10 (factor -> factor EXP factor .)
    LSET            reduce using rule 10 (factor -> factor EXP factor .)
    NUMBER          reduce using rule 10 (factor -> factor EXP factor .)
    VARIABLE        reduce using rule 10 (factor -> factor EXP factor .)
    COMMA           reduce using rule 10 (factor -> factor EXP factor .)
    PLUS            reduce using rule 10 (factor -> factor EXP factor .)
    $end            reduce using rule 10 (factor -> factor EXP factor .)
    RBRACKET        reduce using rule 10 (factor -> factor EXP factor .)
    RPAREN          reduce using rule 10 (factor -> factor EXP factor .)
    RSET            reduce using rule 10 (factor -> factor EXP factor .)
    FACTORIAL       shift and go to state 22
    CHOOSE          shift and go to state 6

  ! FACTORIAL       [ reduce using rule 10 (factor -> factor EXP factor .) ]
  ! CHOOSE          [ reduce using rule 10 (factor -> factor EXP factor .) ]
  ! TIMES           [ shift and go to state 23 ]
  ! DIVIDE          [ shift and go to state 21 ]
  ! EXP             [ shift and go to state 25 ]
  ! MINUS           [ shift and go to state 11 ]
  ! LPAREN          [ shift and go to state 9 ]
  ! LBRACKET        [ shift and go to state 3 ]
  ! LSET            [ shift and go to state 5 ]
  ! NUMBER          [ shift and go to state 2 ]
  ! VARIABLE        [ shift and go to state 4 ]

    factor                         shift and go to state 26

state 48

    (7) expression -> factor MINUS factor .
    (12) factor -> MINUS factor .
    (8) factor -> factor . TIMES factor
    (9) factor -> factor . DIVIDE factor
    (10) factor -> factor . EXP factor
    (11) factor -> factor . factor
    (13) factor -> factor . FACTORIAL
    (8) factor -> . factor TIMES factor
    (9) factor -> . factor DIVIDE factor
    (10) factor -> . factor EXP factor
    (11) factor -> . factor factor
    (12) factor -> . MINUS factor
    (13) factor -> . factor FACTORIAL
    (14) factor -> . CHOOSE LPAREN list RPAREN
    (15) factor -> . LPAREN expression RPAREN
    (16) factor -> . LBRACKET expression RBRACKET
    (17) factor -> . LPAREN factor RPAREN
    (18) factor -> . LBRACKET factor RBRACKET
    (19) factor -> . LSET list RSET
    (20) factor -> . LSET expression RSET
    (21) factor -> . LSET RSET
    (22) factor -> . LPAREN list RPAREN
    (29) factor -> . NUMBER
    (30) factor -> . VARIABLE

  ! reduce/reduce conflict for MINUS resolved using rule 7 (expression -> factor MINUS factor .)
  ! reduce/reduce conflict for CHOOSE resolved using rule 7 (expression -> factor MINUS factor .)
  ! reduce/reduce conflict for LPAREN resolved using rule 7 (expression -> factor MINUS factor .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 7 (expression -> factor MINUS factor .)
  ! reduce/reduce conflict for LSET resolved using rule 7 (expression -> factor MINUS factor .)
  ! reduce/reduce conflict for NUMBER resolved using rule 7 (expression -> factor MINUS factor .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 7 (expression -> factor MINUS factor .)
  ! reduce/reduce conflict for COMMA resolved using rule 7 (expression -> factor MINUS factor .)
  ! reduce/reduce conflict for PLUS resolved using rule 7 (expression -> factor MINUS factor .)
  ! reduce/reduce conflict for RPAREN resolved using rule 7 (expression -> factor MINUS factor .)
  ! reduce/reduce conflict for $end resolved using rule 7 (expression -> factor MINUS factor .)
  ! reduce/reduce conflict for RSET resolved using rule 7 (expression -> factor MINUS factor .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 7 (expression -> factor MINUS factor .)
    RPAREN          reduce using rule 7 (expression -> factor MINUS factor .)
    PLUS            reduce using rule 7 (expression -> factor MINUS factor .)
    MINUS           reduce using rule 7 (expression -> factor MINUS factor .)
    COMMA           reduce using rule 7 (expression -> factor MINUS factor .)
    LPAREN          reduce using rule 7 (expression -> factor MINUS factor .)
    LBRACKET        reduce using rule 7 (expression -> factor MINUS factor .)
    LSET            reduce using rule 7 (expression -> factor MINUS factor .)
    NUMBER          reduce using rule 7 (expression -> factor MINUS factor .)
    VARIABLE        reduce using rule 7 (expression -> factor MINUS factor .)
    RSET            reduce using rule 7 (expression -> factor MINUS factor .)
    RBRACKET        reduce using rule 7 (expression -> factor MINUS factor .)
    $end            reduce using rule 7 (expression -> factor MINUS factor .)
    TIMES           shift and go to state 23
    DIVIDE          shift and go to state 21
    EXP             shift and go to state 25
    FACTORIAL       shift and go to state 22
    CHOOSE          shift and go to state 6

  ! CHOOSE          [ reduce using rule 7 (expression -> factor MINUS factor .) ]
  ! TIMES           [ reduce using rule 12 (factor -> MINUS factor .) ]
  ! DIVIDE          [ reduce using rule 12 (factor -> MINUS factor .) ]
  ! EXP             [ reduce using rule 12 (factor -> MINUS factor .) ]
  ! FACTORIAL       [ reduce using rule 12 (factor -> MINUS factor .) ]
  ! MINUS           [ reduce using rule 12 (factor -> MINUS factor .) ]
  ! CHOOSE          [ reduce using rule 12 (factor -> MINUS factor .) ]
  ! LPAREN          [ reduce using rule 12 (factor -> MINUS factor .) ]
  ! LBRACKET        [ reduce using rule 12 (factor -> MINUS factor .) ]
  ! LSET            [ reduce using rule 12 (factor -> MINUS factor .) ]
  ! NUMBER          [ reduce using rule 12 (factor -> MINUS factor .) ]
  ! VARIABLE        [ reduce using rule 12 (factor -> MINUS factor .) ]
  ! COMMA           [ reduce using rule 12 (factor -> MINUS factor .) ]
  ! PLUS            [ reduce using rule 12 (factor -> MINUS factor .) ]
  ! RPAREN          [ reduce using rule 12 (factor -> MINUS factor .) ]
  ! $end            [ reduce using rule 12 (factor -> MINUS factor .) ]
  ! RSET            [ reduce using rule 12 (factor -> MINUS factor .) ]
  ! RBRACKET        [ reduce using rule 12 (factor -> MINUS factor .) ]
  ! MINUS           [ shift and go to state 11 ]
  ! LPAREN          [ shift and go to state 9 ]
  ! LBRACKET        [ shift and go to state 3 ]
  ! LSET            [ shift and go to state 5 ]
  ! NUMBER          [ shift and go to state 2 ]
  ! VARIABLE        [ shift and go to state 4 ]

    factor                         shift and go to state 26

state 49

    (22) factor -> LPAREN list RPAREN .

    TIMES           reduce using rule 22 (factor -> LPAREN list RPAREN .)
    DIVIDE          reduce using rule 22 (factor -> LPAREN list RPAREN .)
    EXP             reduce using rule 22 (factor -> LPAREN list RPAREN .)
    FACTORIAL       reduce using rule 22 (factor -> LPAREN list RPAREN .)
    MINUS           reduce using rule 22 (factor -> LPAREN list RPAREN .)
    CHOOSE          reduce using rule 22 (factor -> LPAREN list RPAREN .)
    LPAREN          reduce using rule 22 (factor -> LPAREN list RPAREN .)
    LBRACKET        reduce using rule 22 (factor -> LPAREN list RPAREN .)
    LSET            reduce using rule 22 (factor -> LPAREN list RPAREN .)
    NUMBER          reduce using rule 22 (factor -> LPAREN list RPAREN .)
    VARIABLE        reduce using rule 22 (factor -> LPAREN list RPAREN .)
    COMMA           reduce using rule 22 (factor -> LPAREN list RPAREN .)
    PLUS            reduce using rule 22 (factor -> LPAREN list RPAREN .)
    $end            reduce using rule 22 (factor -> LPAREN list RPAREN .)
    RBRACKET        reduce using rule 22 (factor -> LPAREN list RPAREN .)
    RPAREN          reduce using rule 22 (factor -> LPAREN list RPAREN .)
    RSET            reduce using rule 22 (factor -> LPAREN list RPAREN .)


state 50

    (17) factor -> LPAREN factor RPAREN .

    TIMES           reduce using rule 17 (factor -> LPAREN factor RPAREN .)
    DIVIDE          reduce using rule 17 (factor -> LPAREN factor RPAREN .)
    EXP             reduce using rule 17 (factor -> LPAREN factor RPAREN .)
    FACTORIAL       reduce using rule 17 (factor -> LPAREN factor RPAREN .)
    MINUS           reduce using rule 17 (factor -> LPAREN factor RPAREN .)
    CHOOSE          reduce using rule 17 (factor -> LPAREN factor RPAREN .)
    LPAREN          reduce using rule 17 (factor -> LPAREN factor RPAREN .)
    LBRACKET        reduce using rule 17 (factor -> LPAREN factor RPAREN .)
    LSET            reduce using rule 17 (factor -> LPAREN factor RPAREN .)
    NUMBER          reduce using rule 17 (factor -> LPAREN factor RPAREN .)
    VARIABLE        reduce using rule 17 (factor -> LPAREN factor RPAREN .)
    COMMA           reduce using rule 17 (factor -> LPAREN factor RPAREN .)
    PLUS            reduce using rule 17 (factor -> LPAREN factor RPAREN .)
    $end            reduce using rule 17 (factor -> LPAREN factor RPAREN .)
    RBRACKET        reduce using rule 17 (factor -> LPAREN factor RPAREN .)
    RPAREN          reduce using rule 17 (factor -> LPAREN factor RPAREN .)
    RSET            reduce using rule 17 (factor -> LPAREN factor RPAREN .)


state 51

    (15) factor -> LPAREN expression RPAREN .

    TIMES           reduce using rule 15 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 15 (factor -> LPAREN expression RPAREN .)
    EXP             reduce using rule 15 (factor -> LPAREN expression RPAREN .)
    FACTORIAL       reduce using rule 15 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 15 (factor -> LPAREN expression RPAREN .)
    CHOOSE          reduce using rule 15 (factor -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 15 (factor -> LPAREN expression RPAREN .)
    LBRACKET        reduce using rule 15 (factor -> LPAREN expression RPAREN .)
    LSET            reduce using rule 15 (factor -> LPAREN expression RPAREN .)
    NUMBER          reduce using rule 15 (factor -> LPAREN expression RPAREN .)
    VARIABLE        reduce using rule 15 (factor -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 15 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 15 (factor -> LPAREN expression RPAREN .)
    $end            reduce using rule 15 (factor -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 15 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 15 (factor -> LPAREN expression RPAREN .)
    RSET            reduce using rule 15 (factor -> LPAREN expression RPAREN .)


state 52

    (4) expression -> expression PLUS factor .
    (8) factor -> factor . TIMES factor
    (9) factor -> factor . DIVIDE factor
    (10) factor -> factor . EXP factor
    (11) factor -> factor . factor
    (13) factor -> factor . FACTORIAL
    (8) factor -> . factor TIMES factor
    (9) factor -> . factor DIVIDE factor
    (10) factor -> . factor EXP factor
    (11) factor -> . factor factor
    (12) factor -> . MINUS factor
    (13) factor -> . factor FACTORIAL
    (14) factor -> . CHOOSE LPAREN list RPAREN
    (15) factor -> . LPAREN expression RPAREN
    (16) factor -> . LBRACKET expression RBRACKET
    (17) factor -> . LPAREN factor RPAREN
    (18) factor -> . LBRACKET factor RBRACKET
    (19) factor -> . LSET list RSET
    (20) factor -> . LSET expression RSET
    (21) factor -> . LSET RSET
    (22) factor -> . LPAREN list RPAREN
    (29) factor -> . NUMBER
    (30) factor -> . VARIABLE

    RPAREN          reduce using rule 4 (expression -> expression PLUS factor .)
    PLUS            reduce using rule 4 (expression -> expression PLUS factor .)
    MINUS           reduce using rule 4 (expression -> expression PLUS factor .)
    COMMA           reduce using rule 4 (expression -> expression PLUS factor .)
    LPAREN          reduce using rule 4 (expression -> expression PLUS factor .)
    LBRACKET        reduce using rule 4 (expression -> expression PLUS factor .)
    LSET            reduce using rule 4 (expression -> expression PLUS factor .)
    NUMBER          reduce using rule 4 (expression -> expression PLUS factor .)
    VARIABLE        reduce using rule 4 (expression -> expression PLUS factor .)
    RSET            reduce using rule 4 (expression -> expression PLUS factor .)
    RBRACKET        reduce using rule 4 (expression -> expression PLUS factor .)
    $end            reduce using rule 4 (expression -> expression PLUS factor .)
    TIMES           shift and go to state 23
    DIVIDE          shift and go to state 21
    EXP             shift and go to state 25
    FACTORIAL       shift and go to state 22
    CHOOSE          shift and go to state 6

  ! CHOOSE          [ reduce using rule 4 (expression -> expression PLUS factor .) ]
  ! MINUS           [ shift and go to state 11 ]
  ! LPAREN          [ shift and go to state 9 ]
  ! LBRACKET        [ shift and go to state 3 ]
  ! LSET            [ shift and go to state 5 ]
  ! NUMBER          [ shift and go to state 2 ]
  ! VARIABLE        [ shift and go to state 4 ]

    factor                         shift and go to state 26

state 53

    (6) expression -> expression MINUS factor .
    (8) factor -> factor . TIMES factor
    (9) factor -> factor . DIVIDE factor
    (10) factor -> factor . EXP factor
    (11) factor -> factor . factor
    (13) factor -> factor . FACTORIAL
    (8) factor -> . factor TIMES factor
    (9) factor -> . factor DIVIDE factor
    (10) factor -> . factor EXP factor
    (11) factor -> . factor factor
    (12) factor -> . MINUS factor
    (13) factor -> . factor FACTORIAL
    (14) factor -> . CHOOSE LPAREN list RPAREN
    (15) factor -> . LPAREN expression RPAREN
    (16) factor -> . LBRACKET expression RBRACKET
    (17) factor -> . LPAREN factor RPAREN
    (18) factor -> . LBRACKET factor RBRACKET
    (19) factor -> . LSET list RSET
    (20) factor -> . LSET expression RSET
    (21) factor -> . LSET RSET
    (22) factor -> . LPAREN list RPAREN
    (29) factor -> . NUMBER
    (30) factor -> . VARIABLE

    RPAREN          reduce using rule 6 (expression -> expression MINUS factor .)
    PLUS            reduce using rule 6 (expression -> expression MINUS factor .)
    MINUS           reduce using rule 6 (expression -> expression MINUS factor .)
    COMMA           reduce using rule 6 (expression -> expression MINUS factor .)
    LPAREN          reduce using rule 6 (expression -> expression MINUS factor .)
    LBRACKET        reduce using rule 6 (expression -> expression MINUS factor .)
    LSET            reduce using rule 6 (expression -> expression MINUS factor .)
    NUMBER          reduce using rule 6 (expression -> expression MINUS factor .)
    VARIABLE        reduce using rule 6 (expression -> expression MINUS factor .)
    RSET            reduce using rule 6 (expression -> expression MINUS factor .)
    RBRACKET        reduce using rule 6 (expression -> expression MINUS factor .)
    $end            reduce using rule 6 (expression -> expression MINUS factor .)
    TIMES           shift and go to state 23
    DIVIDE          shift and go to state 21
    EXP             shift and go to state 25
    FACTORIAL       shift and go to state 22
    CHOOSE          shift and go to state 6

  ! CHOOSE          [ reduce using rule 6 (expression -> expression MINUS factor .) ]
  ! MINUS           [ shift and go to state 11 ]
  ! LPAREN          [ shift and go to state 9 ]
  ! LBRACKET        [ shift and go to state 3 ]
  ! LSET            [ shift and go to state 5 ]
  ! NUMBER          [ shift and go to state 2 ]
  ! VARIABLE        [ shift and go to state 4 ]

    factor                         shift and go to state 26

state 54

    (14) factor -> CHOOSE LPAREN list RPAREN .

    TIMES           reduce using rule 14 (factor -> CHOOSE LPAREN list RPAREN .)
    DIVIDE          reduce using rule 14 (factor -> CHOOSE LPAREN list RPAREN .)
    EXP             reduce using rule 14 (factor -> CHOOSE LPAREN list RPAREN .)
    FACTORIAL       reduce using rule 14 (factor -> CHOOSE LPAREN list RPAREN .)
    MINUS           reduce using rule 14 (factor -> CHOOSE LPAREN list RPAREN .)
    CHOOSE          reduce using rule 14 (factor -> CHOOSE LPAREN list RPAREN .)
    LPAREN          reduce using rule 14 (factor -> CHOOSE LPAREN list RPAREN .)
    LBRACKET        reduce using rule 14 (factor -> CHOOSE LPAREN list RPAREN .)
    LSET            reduce using rule 14 (factor -> CHOOSE LPAREN list RPAREN .)
    NUMBER          reduce using rule 14 (factor -> CHOOSE LPAREN list RPAREN .)
    VARIABLE        reduce using rule 14 (factor -> CHOOSE LPAREN list RPAREN .)
    COMMA           reduce using rule 14 (factor -> CHOOSE LPAREN list RPAREN .)
    PLUS            reduce using rule 14 (factor -> CHOOSE LPAREN list RPAREN .)
    $end            reduce using rule 14 (factor -> CHOOSE LPAREN list RPAREN .)
    RBRACKET        reduce using rule 14 (factor -> CHOOSE LPAREN list RPAREN .)
    RPAREN          reduce using rule 14 (factor -> CHOOSE LPAREN list RPAREN .)
    RSET            reduce using rule 14 (factor -> CHOOSE LPAREN list RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MINUS in state 13 resolved as shift
WARNING: reduce/reduce conflict in state 48 resolved using rule (expression -> factor MINUS factor)
WARNING: rejected rule (factor -> MINUS factor) in state 48
