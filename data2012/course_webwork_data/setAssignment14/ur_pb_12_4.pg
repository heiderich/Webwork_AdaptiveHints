## DESCRIPTION
##   Apply the Central Limit Theorem
## ENDDESCRIPTION

## KEYWORDS('Probability', 'Central Limit Theorem')
## Tagged by nhamblet

## DBsubject('Probability')
## DBchapter('Theory')
## DBsection('The Central Limit Theorem')
## Date('')
## Author('')
## Institution('Rochester')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
"PG.pl",
"PGML.pl",
"MathObjects.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
"PGgraphmacros.pl",
"PGnumericalmacros.pl",
"PGstatisticsmacros.pl"
);

TEXT(beginproblem());
$showPartialCorrectAnswers = 1;

package my::Function::numeric;
our @ISA = ('Parser::Function::numeric');

sub Q {
   shift; my $x = shift;
   return main::normal_prob($x, 'infty', mean=>0, deviation=>1);
}

sub Phi {
   shift; my $x = shift;
   return main::normal_prob('-infty', $x, mean=>0, deviation=>1);
}

sub erf {
   shift; my $x = shift;
   $phi = main::normal_prob('-infty', $x*sqrt(2), mean=>0, deviation=>1);
   $a = 2*$phi-1;
   return $a;
}

package main;

Context("Numeric");
Context()->functions->add(
erf =>{class=>"my::Function::numeric", nocomplex=>1},
Q =>{class=>"my::Function::numeric", nocomplex=>1}, 
Phi =>{class=>"my::Function::numeric", nocomplex=>1}
);
Context()->flags->set(tolerance=>0.001);

Context()->texStrings;

$n = random(20,30,1);
$nc = random(4,6,1);
$p = 1/$nc;
$mean = $n*$p;
$low = int($mean + 4);
$high = int($mean + 8);
$corr = random($low, $high, 1);

$dev = sqrt( $n / $nc * (1-1/ $nc));

#$ans = normal_prob($corr, 'infty', mean=>$mean, deviation=>$dev);
$ans = Compute("Q(($corr-$mean)/$dev)");

BEGIN_PGML

For this set of assignment, you can use the error function "erf(...)" in your answer.

---
In the last assignment we met the monkey who took multiple-choice tests by random guessing. We know the number of questions the monkey guesses correctly follows a binomial distribution, and we have computed the exact probability of a tail of this distribution, by summing up all cases in the tail.

In this question, we assume the number of questions is large enough so that by central limit theorem we can use a normal distribution to approximate the binomial distribution. This makes computing the probability of a certain part of the distribution much easier. 

Suppose the monkey is taking a multiple-choice test that consists of [$n] questions each with [$nc] possible answers, let us estimate the probability that it gets at least [$corr] questions correct, using an approximated normal distribution.
---
Suppose X is the number of correct answers.

What is the mean of X ? [_______]{"$n*$p"}

What is the standard deviation of X ? [_______]{"sqrt($n*$p*(1-$p))"}

What is the z-score of [`X=[$corr]`]? [___________]{"($corr-$mean)/$dev"}

What is the estimated probability that [`X \ge [$corr]`] ? [_____________]{$ans}

END_PGML

Context()->normalStrings;

BEGIN_PGML_SOLUTION
---
## Solution ##

The mean number of correct questions is [`[$n]/[$nc] = [$mean]`].

The standard deviation of the number of correct questions is [`\sqrt{[$n]\cdot 1/[$nc] \cdot (1-1/[$nc])}=[$dev]`].

The probability of at least [$corr] questions are correct is [`Q\left(\frac{[$corr]-[$mean]}{[$dev]}\right) = [$ans]`].

END_PGML_SOLUTION

ENDDOCUMENT();       # This should be the last executable line in the problem.