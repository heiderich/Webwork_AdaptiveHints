## DESCRIPTION
##   Apply the Central Limit Theorem
## ENDDESCRIPTION

## KEYWORDS('Probability', 'Central Limit Theorem')
## Tagged by nhamblet

## DBsubject('Probability')
## DBchapter('Theory')
## DBsection('The Central Limit Theorem')
## Date('')
## Author('')
## Institution('Rochester')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
"PG.pl",
"PGML.pl",
"MathObjects.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
"PGgraphmacros.pl",
"PGnumericalmacros.pl",
"PGstatisticsmacros.pl"
);

TEXT(beginproblem());
$showPartialCorrectAnswers = 1;

package my::Function::numeric;
our @ISA = ('Parser::Function::numeric');

sub Q {
   shift; my $x = shift;
   return main::normal_prob($x, 'infty', mean=>0, deviation=>1);
}

sub Phi {
   shift; my $x = shift;
   return main::normal_prob('-infty', $x, mean=>0, deviation=>1);
}

sub erf {
   shift; my $x = shift;
   $phi = main::normal_prob('-infty', $x*sqrt(2), mean=>0, deviation=>1);
   $a = 2*$phi-1;
   return $a;
}

package main;

Context("Numeric");
Context()->functions->add(
erf =>{class=>"my::Function::numeric", nocomplex=>1},
Q =>{class=>"my::Function::numeric", nocomplex=>1}, 
Phi =>{class=>"my::Function::numeric", nocomplex=>1}
);
Context()->flags->set(tolerance=>0.001);

Context()->texStrings;

Context()->variables->are(
      n => ['Real', limits=>[1,100], resolution=>1],
    );

$sentences = random(1,10);

if ($sentences == 1) {
$sentence1 = "hello there world";
$sentence2 = "hi world";
$intersect_words = "world";
$intersect_words_len = "1";
$union_words = "hello hi there world";
$union_words_len = "4";
$jaccard = "0.250";
}
if ($sentences == 2) {
$sentence1 = "jason went to the store";
$sentence2 = "at the store he bought a book";
$intersect_words = "store the";
$intersect_words_len = "2";
$union_words = "a at book bought he jason store the to went";
$union_words_len = "10";
$jaccard = "0.200";
}
if ($sentences == 3) {
$sentence1 = "buy one get one free";
$sentence2 = "free beer";
$intersect_words = "free";
$intersect_words_len = "1";
$union_words = "beer buy free get one";
$union_words_len = "5";
$jaccard = "0.200";
}
if ($sentences == 4) {
$sentence1 = "where is my hat";
$sentence2 = "on the hatstand";
$intersect_words = "";
$intersect_words_len = "0";
$union_words = "hat hatstand is my on the where";
$union_words_len = "7";
$jaccard = "0.000";
}
if ($sentences == 5) {
$sentence1 = "yes no maybe no";
$sentence2 = "no why do you ask";
$intersect_words = "no";
$intersect_words_len = "1";
$union_words = "ask do maybe no why yes you";
$union_words_len = "7";
$jaccard = "0.143";
}
if ($sentences == 6) {
$sentence1 = "don't get mad get glad";
$sentence2 = "get going";
$intersect_words = "get";
$intersect_words_len = "1";
$union_words = "don't get glad going mad";
$union_words_len = "5";
$jaccard = "0.200";
}
if ($sentences == 7) {
$sentence1 = "protect your chicken";
$sentence2 = "a chicken is a chicken";
$intersect_words = "chicken";
$intersect_words_len = "1";
$union_words = "a chicken is protect your";
$union_words_len = "5";
$jaccard = "0.200";
}
if ($sentences == 8) {
$sentence1 = "bobo nanza bobo bobo";
$sentence2 = "bobo bobo";
$intersect_words = "bobo";
$intersect_words_len = "1";
$union_words = "bobo nanza";
$union_words_len = "2";
$jaccard = "0.500";
}
if ($sentences == 9) {
$sentence1 = "the names bond james bond";
$sentence2 = "nice to see you mr bond";
$intersect_words = "bond";
$intersect_words_len = "1";
$union_words = "bond james mr names nice see the to you";
$union_words_len = "9";
$jaccard = "0.111";
}
if ($sentences == 10) {
$sentence1 = "the dow is down 1%";
$sentence2 = "the dow surged 2%";
$intersect_words = "dow the";
$intersect_words_len = "2";
$union_words = "1% 2% dow down is surged the";
$union_words_len = "7";
$jaccard = "0.286";
}
BEGIN_PGML
What is the jaccard similarity coefficient between "[$sentence1]" and "[$sentence2]"?  [______]{"$jaccard"}
END_PGML

$showHint = -1; 
BEGIN_HINT
$PAR
$SOLUTION
$PAR
The sentences have $intersect_words_len words in common, "$intersect_words".  
$PAR
The sentences have $union_words_len distinct words total, "$union_words".  
$PAR
Thus the jaccard distance is $intersect_words_len/$union_words_len = $jaccard
END_HINT
ENDDOCUMENT();       # This should be the last executable line in the problem.